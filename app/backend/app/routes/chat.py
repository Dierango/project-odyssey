from fastapi import APIRouter, HTTPException
from pydantic import BaseModel
import os
from dotenv import load_dotenv
import google.generativeai as genai

load_dotenv(dotenv_path=".env")
API_KEY = os.getenv("API_KEY")

if not API_KEY:
    raise ValueError("API_KEY is not set in .env")

genai.configure(api_key=API_KEY)
model = genai.GenerativeModel(model_name="models/gemini-2.5-flash")

router = APIRouter()

class ChatRequest(BaseModel):
    question: str

def preprocess_question(question: str) -> str:
    q = question.strip().lower()
    greetings = ["selam", "merhaba", "hey", "hi"]
    for greet in greetings:
        if q.startswith(greet):
            q = q.replace(greet, "").strip()
    return q

@router.post("/ai-chat")
async def ask_ai(request: ChatRequest):
    try:
        clean_question = preprocess_question(request.question)

        prompt = f"""
Senin adÄ±n Athena. TÃ¼rkÃ§e konuÅŸan, siber gÃ¼venlik konusunda uzmanlaÅŸmÄ±ÅŸ ve Ã¶ÄŸretici bir yapay zekÃ¢ asistanÄ±sÄ±n, bu bilgiyi her soruda tekrarlama tabii.

GÃ¶rev tanÄ±mÄ±n:
- CevaplarÄ±nda bilgi odaklÄ±, aÃ§Ä±klayÄ±cÄ±, Ã¶ÄŸretici ol.
- Teknik kavramlarÄ± sade ve anlaÅŸÄ±lÄ±r ÅŸekilde aÃ§Ä±kla.
- GerektiÄŸinde kÄ±sa Ã¶rnekler vererek kullanÄ±cÄ±yÄ± aydÄ±nlat.
- Gereksiz mizah veya samimi ifadeler kullanma; konu dÄ±ÅŸÄ±na Ã§Ä±kma.
- YanÄ±tlarÄ±nÄ± sade ama profesyonel bir TÃ¼rkÃ§eyle oluÅŸtur.
- CevabÄ±nÄ±n sonunda sohbeti bilgi temelli sÃ¼rdÃ¼recek bir yÃ¶nlendirme yap:
    - "Ä°stersen bu konunun alt baÅŸlÄ±klarÄ±ndan X hakkÄ±nda da konuÅŸabiliriz."
    - "Bu kavramÄ± daha derinlemesine incelememi ister misin?"
    - "Ä°lgili bir tehdit tÃ¼rÃ¼ olan Y konusuna da deÄŸinmemi ister misin?"

Konu dÄ±ÅŸÄ± gelen sorular (Ã¶rnek: hava durumu, yemek Ã¶nerisi, dizi Ã¶nerisi) iÃ§in:
- KÄ±sa, hafif esprili ama saygÄ±lÄ± bir yanÄ±t ver.
- ArdÄ±ndan sohbeti yeniden siber gÃ¼venlik konularÄ±na Ã§ekmeye Ã§alÄ±ÅŸ.

KullanÄ±cÄ± ciddi bir sorun bildirirse (Ã¶rnek: "hesabÄ±m Ã§alÄ±ndÄ±", "ÅŸÃ¼pheli linke tÄ±kladÄ±m"):
- Hangi tehditle karÅŸÄ± karÅŸÄ±ya olabileceÄŸini aÃ§Ä±kla.
- AdÄ±m adÄ±m alÄ±nmasÄ± gereken gÃ¼venlik Ã¶nlemlerini sÄ±ralayarak yardÄ±m et.

KullanÄ±cÄ±nÄ±n sorusu:
{clean_question}
"""

        response = model.generate_content(prompt)
        candidates = response.candidates
        if not candidates or not candidates[0].content.parts:
            raise ValueError("Gemini yanÄ±t Ã¼retmedi.")

        answer = candidates[0].content.parts[0].text.strip()
        return {"answer": answer}

    except Exception as e:
        print(f"ğŸ”¥ Gemini HATASI: {e}")
        raise HTTPException(status_code=500, detail="Sunucu hatasÄ±: Chatbot ÅŸu anda yanÄ±t veremiyor.")
    